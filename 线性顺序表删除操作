//线性顺序表的删除操作-将第i位置的元素删除，e保存被删除的元素 
#include<stdio.h>
#include<stdlib.h>
int main()
{
	int i,e,NUM=5;
	int j;
	int *p,*q;//p指向i位置，q指向最后一个元素 
	int * pst=(int*)malloc(sizeof(int)*NUM);
	for(j=0;j<NUM;j++)
		scanf("%d",pst+j);
	for(j=0;j<NUM;j++)
		printf("%d\t",*(pst+j));
	printf("\n");
	printf("the deleted elem of order: ");
	scanf("%d",&i);
	if(i<1||i>NUM){
		free(pst);
		return -1;
	}	
	q = pst+NUM-1;
	e = *(pst+i-1);
	printf("the deleted elem is:%d",e);
	printf("\n"); 
	for(p=pst+i-1;p<=q;p++)
		*p=*(p+1);
	printf("the list is:\n");
	for(int j=0;j<NUM-1;j++)
		printf("%d\n",*(pst+j));
	free(pst);
	return 0;
 } 
 //问题：
 //1.free（）和delete（）有区别吗
 //2.将动态分配的空间pst释放后，无论输出pst、&pst、*pst都有值，这是正确的吗？释放后不是空间为空了吗？
